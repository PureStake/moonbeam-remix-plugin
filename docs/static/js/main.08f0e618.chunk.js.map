{"version":3,"sources":["erc20Abi.ts","moonbeam-signer.ts","components/Method.tsx","components/Compiler.tsx","components/SmartContracts.tsx","App.tsx","index.tsx"],"names":["ERC20ABI","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","NETWORKS","provider","NETWORKS_BY_IDS","url","erc20","MoonbeamLib","network","isConnected","isMoonbeamNetwork","web3","contracts","this","Web3","eth","Contract","address","getBalance","onAccountsChanged","window","ethereum","isMetaMask","enable","detectEthereumProvider","mustBeMetaMask","getAccounts","accountsRead","localStorage","setItem","Error","net","getId","networkId","web3Tx","sendTransaction","Method","props","React","useState","setInputs","abi","setArgs","useEffect","Form","className","items","map","item","index","Fragment","Text","Control","size","placeholder","onChange","event","target","value","JSON","parse","toString","Group","DrawInputs","getFunctions","temp","forEach","element","push","getArguments","args","Compiler","client","setClient","fileName","setFileName","iconSpin","setIconSpin","data","setContracts","contractName","setContractName","constructor","setConstructor","setAddress","error","setError","moonbeamLib","busy","setBusy","addNewContract","setSelected","updateBalance","compile","a","solidity","select","newContracts","element0","element1","newContract","stringify","accounts","parms","rawTx","from","deploy","evm","bytecode","object","arguments","encodeABI","txReceipt","contractAddress","console","message","Contracts","split","length","Object","keys","key","Button","variant","disabled","onClick","copy","InputGroup","as","e","createClient","onload","on","fn","source","languageVersion","fileManager","getCurrentFile","log","init","block","style","marginRight","Card","Header","Body","Alert","onClose","dismissible","hidden","readOnly","Append","EMPTYLIST","DrawMethod","success","setSuccess","setValue","buttonVariant","value2","Prepend","methods","call","send","ContractCard","setEnable","contract","remove","CSSTransition","in","timeout","classNames","unmountOnExit","onExited","substring","id","Accordion","Toggle","eventKey","Collapse","DrawMathods","SmartContracts","count","setCount","DrawContracts","App","account","setAccount","balance","setBalance","setNetwork","atAddress","setAtAddress","selected","connectMetaMask","getTotalBalance","readBalance","utils","fromWei","concat","Networks","Container","OverlayTrigger","placement","overlay","Tooltip","color","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08f0e618.chunk.js","sourcesContent":["import { AbiItem } from 'web3-utils';\n\nexport const ERC20ABI: AbiItem[] = [\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: 'name',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: '_spender',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '_value',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'approve',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'nonpayable',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: 'totalSupply',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: '_from',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '_to',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '_value',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'transferFrom',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'nonpayable',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: 'decimals',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'uint8',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: '_owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'balanceOf',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: 'balance',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: 'symbol',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: '_to',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '_value',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'transfer',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'nonpayable',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: '_owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: '_spender',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'allowance',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tpayable: false,\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tpayable: true,\n\t\tstateMutability: 'payable',\n\t\ttype: 'fallback',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tname: 'spender',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tname: 'value',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'Approval',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tname: 'from',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tname: 'to',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tname: 'value',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'Transfer',\n\t\ttype: 'event',\n\t},\n];\nexport default ERC20ABI;\n","import Web3 from 'web3';\nimport { AbiItem } from 'web3-utils';\nimport { TransactionConfig, TransactionReceipt } from 'web3-core';\n\n// //import { newKitFromWeb3, ContractKit, newKit } from '@celo/contractkit';\n// //import { Address, AbiItem, ReadOnlyWallet, TransactionResult, CeloTxReceipt } from '@celo/connect';\n// import Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\n// import TransportWebUSB from '@ledgerhq/hw-transport-webusb';\nimport { ERC20ABI as erc20 } from './erc20Abi';\n// // import { newLedgerWalletWithSetup } from './wallet/ledgerWallet/wallet';\n// // import { newMetaMaskWalletWithSetup } from './wallet/metamask/wallet';\n// // import { newDAppBrowserWalletWithSetup } from './wallet/dappbrowser/wallet';\n\n// const BluetoothTransport = require('@ledgerhq/hw-transport-web-ble').default;\ntype Address = string;\ninterface Network {\n\tprovider: string;\n\tblockscout?: string;\n}\n\nexport const NETWORKS: { [key: string]: Network } = {\n\t'Moonbase Alpha': {\n\t\tprovider: 'https://rpc.testnet.moonbeam.network',\n\t\t// blockscout: 'https://explorer.celo.org',\n\t},\n\t'Moonbeam Standalone': {\n\t\tprovider: 'http://127.0.0.1:9933',\n\t},\n};\n\nexport const NETWORKS_BY_IDS: { [key: string]: { name: string; url: string } } = {\n\t'1287': {\n\t\tname: 'Moonbase Alpha',\n\t\turl: 'https://rpc.testnet.moonbeam.network',\n\t},\n\t'1281': {\n\t\tname: 'Moonbeam Standalone',\n\t\turl: 'http://127.0.0.1:9933',\n\t},\n};\n\nexport const ERC20ABI: AbiItem[] = erc20;\n\nexport class MoonbeamLib {\n\t// \t//public kit: ContractKit;\n\n\tpublic isConnected = false;\n\n\tpublic isMoonbeamNetwork = false;\n\n\tpublic web3: Web3;\n\n\tprivate network: Network;\n\n\t// \tprivate isDesktop: boolean = false;\n\n\t// \tprivate transport: any = null;\n\n\t// \tprivate wallet: ReadOnlyWallet | null = null;\n\n\tpublic contracts: any = {\n\t\terc20: null,\n\t};\n\n\t// \tgetSupport = async () => {\n\t// \t\tconst celo = !!(window as { [key: string]: any }).celo;\n\t// \t\tconst metamask =\n\t// \t\t\t(window as { [key: string]: any }).ethereum && (window as { [key: string]: any }).ethereum.isMetaMask;\n\t// \t\tconst usb = await TransportWebUSB.isSupported();\n\t// \t\tconst ble = await BluetoothTransport.isSupported();\n\t// \t\treturn { celo, metamask, usb, ble };\n\t// \t};\n\n\t// \tgetNetwork = (): Network => {\n\t// \t\treturn this.network;\n\t// \t};\n\n\tconstructor(network: Network) {\n\t\tthis.network = network;\n\t\t// this.kit = newKit(this.network.provider);\n\t\tthis.web3 = new Web3(network.provider);\n\t\tthis.contracts.erc20 = new this.web3.eth.Contract(ERC20ABI);\n\t}\n\n\tasync getTotalBalance(address: string) {\n\t\treturn this.web3.eth.getBalance(address);\n\t}\n\n\t// \tasync disconnect() {\n\t// \t\tif (this.transport) {\n\t// \t\t\tawait this.transport.on('disconnect', () => {\n\t// \t\t\t\tthis.transport = null;\n\t// \t\t\t});\n\t// \t\t}\n\t// \t\tthis.isConnected = false;\n\t// \t\tif (localStorage) {\n\t// \t\t\tlocalStorage.setItem('CeloWebSigner', '');\n\t// \t\t}\n\t// \t}\n\n\t// \tasync connectCelo(\n\t// \t\t// eslint-disable-next-line no-unused-vars\n\t// \t\tonChainChanged: (networkName: string) => void,\n\t// \t\t// eslint-disable-next-line no-unused-vars\n\t// \t\tonAccountsChanged: (accounts: Address[]) => void\n\t// \t) {\n\t// \t\tif ((window as { [key: string]: any }).celo) {\n\t// \t\t\tconst provider: any = (window as { [key: string]: any }).celo;\n\t// \t\t\tif (provider.isDesktop) {\n\t// \t\t\t\tthis.kit = newKit(this.network.provider);\n\t// \t\t\t\tprovider.on('accountsChanged', (accounts: Array<Address>) => {\n\t// \t\t\t\t\tif (onAccountsChanged) {\n\t// \t\t\t\t\t\tonAccountsChanged(accounts);\n\t// \t\t\t\t\t}\n\t// \t\t\t\t});\n\t// \t\t\t\tprovider.on('chainChanged', async (chainId: string) => {\n\t// \t\t\t\t\tconst INDEX: any = {\n\t// \t\t\t\t\t\t'42220': { name: 'Mainnet' },\n\t// \t\t\t\t\t\t'44787': { name: 'Alfajores' },\n\t// \t\t\t\t\t\t'62320': { name: 'Baklava' },\n\t// \t\t\t\t\t};\n\t// \t\t\t\t\tif (onChainChanged) {\n\t// \t\t\t\t\t\tonChainChanged(INDEX[chainId].name);\n\t// \t\t\t\t\t}\n\t// \t\t\t\t});\n\t// \t\t\t} else if (provider.isMobile) {\n\t// \t\t\t\tconst web3 = new Web3(this.network.provider);\n\t// \t\t\t\tthis.wallet = await newDAppBrowserWalletWithSetup(web3, provider);\n\t// \t\t\t\tthis.kit = newKitFromWeb3(web3, this.wallet);\n\t// \t\t\t\tif (onAccountsChanged) {\n\t// \t\t\t\t\tconst accounts = this.wallet.getAccounts();\n\t// \t\t\t\t\tonAccountsChanged(accounts);\n\t// \t\t\t\t}\n\t// \t\t\t\tthis.isConnected = true;\n\t// \t\t\t} else {\n\t// \t\t\t\tthrow new Error('other celo wallet did not support.');\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\treturn this.isConnected;\n\t// \t}\n\n\t// \t// eslint-disable-next-line no-unused-vars\n\t// \tasync reConnect(onAccountsChanged: (type: string, accounts: Address[]) => void) {\n\t// \t\tif (!this.isConnected) {\n\t// \t\t\tif (localStorage) {\n\t// \t\t\t\tswitch (localStorage.getItem('CeloWebSigner')) {\n\t// \t\t\t\t\tcase 'metamask':\n\t// \t\t\t\t\t\tawait this.connectMetaMask(onAccountsChanged);\n\t// \t\t\t\t\t\tbreak;\n\t// \t\t\t\t\tcase 'usb':\n\t// \t\t\t\t\t\tawait this.connectLedgerUSB(onAccountsChanged);\n\t// \t\t\t\t\t\tbreak;\n\t// \t\t\t\t\tcase 'ble':\n\t// \t\t\t\t\t\tawait this.connectLedgerBLE(onAccountsChanged);\n\t// \t\t\t\t\t\tbreak;\n\t// \t\t\t\t\tdefault:\n\t// \t\t\t\t\t\tbreak;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\treturn this.isConnected;\n\t// \t}\n\n\tasync connectMetaMask(\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tonAccountsChanged: (type: string, accounts: Address[]) => void\n\t) {\n\t\tif ((window as { [key: string]: any }).ethereum) {\n\t\t\tif ((window as { [key: string]: any }).ethereum.isMetaMask) {\n\t\t\t\tawait (window as { [key: string]: any }).ethereum.enable();\n\t\t\t}\n\t\t\tconst provider: any = await detectEthereumProvider({ mustBeMetaMask: true });\n\t\t\tif (provider && provider.isMetaMask) {\n\t\t\t\tconst web3 = new Web3(provider);\n\t\t\t\tthis.web3 = web3;\n\t\t\t\t// this.wallet = await newMetaMaskWalletWithSetup(provider, onAccountsChanged);\n\t\t\t\t// this.kit = newKitFromWeb3(web3, this.wallet);\n\t\t\t\tif (onAccountsChanged) {\n\t\t\t\t\tconst accountsRead = await this.web3.eth.getAccounts(); // this.wallet.getAccounts();\n\t\t\t\t\tonAccountsChanged('metamask', accountsRead);\n\t\t\t\t\tif (localStorage) {\n\t\t\t\t\t\tlocalStorage.setItem('MoonbeamWebSigner', 'metamask');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.isConnected = true;\n\t\t\t} else {\n\t\t\t\tthrow new Error('other ethereum wallet did not support.');\n\t\t\t}\n\t\t}\n\t\t// console.log('net id', await this.web3.eth.net.getId());\n\t\tconst networkId = await this.web3.eth.net.getId();\n\t\tif (NETWORKS_BY_IDS[networkId]) {\n\t\t\tthis.isMoonbeamNetwork = true;\n\t\t\tthis.network = { provider: NETWORKS_BY_IDS[networkId].url };\n\t\t}\n\t\treturn { isConnected: this.isConnected, networkId };\n\t}\n\n\t// \tasync connectLedgerUSB(\n\t// \t\t// eslint-disable-next-line no-unused-vars\n\t// \t\tonAccountsChanged: (type: string, accounts: Address[]) => void\n\t// \t) {\n\t// \t\tif (await TransportWebUSB.isSupported()) {\n\t// \t\t\tconst transport = await TransportWebUSB.create();\n\t// \t\t\tawait this.ledgerSetup('usb', transport, onAccountsChanged);\n\t// \t\t}\n\t// \t\treturn this.isConnected;\n\t// \t}\n\n\t// \tasync connectLedgerBLE(\n\t// \t\t// eslint-disable-next-line no-unused-vars\n\t// \t\tonAccountsChanged: (type: string, accounts: Address[]) => void\n\t// \t) {\n\t// \t\tif (await BluetoothTransport.isSupported()) {\n\t// \t\t\tconst transport = await BluetoothTransport.create();\n\t// \t\t\tawait this.ledgerSetup('ble', transport, onAccountsChanged);\n\t// \t\t}\n\t// \t\treturn this.isConnected;\n\t// \t}\n\n\t// \tprivate async ledgerSetup(\n\t// \t\ttype: string,\n\t// \t\ttransport: any,\n\t// \t\t// eslint-disable-next-line no-unused-vars\n\t// \t\tonAccountsChanged: (_type: string, accounts: Address[]) => void\n\t// \t) {\n\t// \t\tthis.transport = transport;\n\t// \t\tthis.wallet = await newLedgerWalletWithSetup(transport);\n\t// \t\tconst address = this.wallet.getAccounts();\n\t// \t\tif (address.length > 0) {\n\t// \t\t\tconst web3 = new Web3(this.network.provider);\n\t// \t\t\tthis.kit = newKitFromWeb3(web3, this.wallet);\n\t// \t\t\tif (onAccountsChanged) {\n\t// \t\t\t\tonAccountsChanged(type, address);\n\t// \t\t\t\tif (localStorage) {\n\t// \t\t\t\t\tlocalStorage.setItem('CeloWebSigner', type);\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t\tthis.isConnected = true;\n\t// \t\t}\n\t// \t}\n\n\t// async changeNetwork(network: Network) {\n\t// if (!this.isDesktop) {\n\t// \tthis.network = network;\n\t// \tif (this.wallet) {\n\t// \t\tconst web3 = new Web3(this.network.provider);\n\t// \t\tthis.kit = newKitFromWeb3(web3, this.wallet);\n\t// \t} else {\n\t// \t\tthis.kit = newKit(this.network.provider);\n\t// \t}\n\t// }\n\t// this.network = network;\n\t// this.web3 = new Web3(network.provider);\n\t// }\n\n\tasync getAccounts(): Promise<Address[]> {\n\t\t// if (this.isDesktop) {\n\t\t// \tconst result = await this.kit.web3.eth.getAccounts();\n\t\t// \treturn result;\n\t\t// }\n\t\t// return this.wallet ? this.wallet.getAccounts() : [];\n\t\treturn this.web3.eth.getAccounts();\n\t}\n\n\tasync sendTransaction(web3Tx: TransactionConfig): Promise<TransactionReceipt> {\n\t\ttry {\n\t\t\t// const txResult: TransactionResult = await this.kit.sendTransaction(web3Tx);\n\t\t\t// return txResult.waitReceipt();\n\t\t\treturn await this.web3.eth.sendTransaction(web3Tx);\n\t\t} catch (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\t}\n\n\t// \tasync sign(message: string, account: Address): Promise<string | null> {\n\t// \t\tif (this.wallet) {\n\t// \t\t\tconst result = await this.wallet.signPersonalMessage(account, this.kit.web3.utils.toHex(message));\n\t// \t\t\tlet v = this.kit.web3.utils.hexToNumber(`0x${result.slice(130)}`);\n\t// \t\t\tif (v < 27) {\n\t// \t\t\t\tv += 27;\n\t// \t\t\t}\n\t// \t\t\treturn result.slice(0, 130).concat(v.toString(16));\n\t// \t\t}\n\t// \t\treturn null;\n\t// \t}\n\n\t// \trecover(message: string, signature: string): Address {\n\t// \t\ttry {\n\t// \t\t\tconst result = this.kit.web3.eth.accounts.recover(this.kit.web3.utils.toHex(message), signature);\n\t// \t\t\treturn result;\n\t// \t\t} catch (error) {\n\t// \t\t\tthrow new Error(error);\n\t// \t\t}\n\t// \t}\n}\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { AbiInput, AbiItem } from 'web3-utils';\n\ninterface InterfaceProps {\n\tabi: AbiItem | null;\n\tsetArgs: (name: string, value: string) => void;\n}\n\nconst Method: React.FunctionComponent<InterfaceProps> = (props) => {\n\tconst [inputs, setInputs] = React.useState<AbiInput[]>([]);\n\tconst { abi, setArgs } = props;\n\n\tReact.useEffect(() => {\n\t\tsetInputs(abi && abi.inputs ? abi.inputs : []);\n\t}, [abi]);\n\n\tfunction DrawInputs() {\n\t\tconst items = inputs.map((item: AbiInput, index: number) => (\n\t\t\t<React.Fragment key={index.toString()}>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>{item.name}</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tplaceholder={item.type}\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\tif (event.target.value[0] === '[') {\n\t\t\t\t\t\t\tsetArgs(event.target.name, JSON.parse(event.target.value));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetArgs(event.target.name, event.target.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t));\n\t\treturn <Form.Group>{items}</Form.Group>;\n\t}\n\n\treturn <Form className=\"Method\">{DrawInputs()}</Form>;\n};\n\nexport default Method;\n","import React from 'react';\nimport { Alert, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport type { Api } from '@remixproject/plugin-utils';\nimport { Client } from '@remixproject/plugin';\nimport { IRemixApi } from '@remixproject/plugin-api';\nimport { createClient } from '@remixproject/plugin-iframe';\n// import { Celo } from '@dexfair/celo-web-signer';\nimport { MoonbeamLib } from '../moonbeam-signer';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\n\nfunction getFunctions(abi: AbiItem[]): AbiItem[] {\n\tconst temp: AbiItem[] = [];\n\tabi.forEach((element: AbiItem) => {\n\t\tif (element.type === 'function') {\n\t\t\ttemp.push(element);\n\t\t}\n\t});\n\treturn temp;\n}\n\nfunction getArguments(abi: AbiItem | null, args: { [key: string]: string }) {\n\tconst temp: string[] = [];\n\tif (abi) {\n\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\ttemp.push(args[item.name]);\n\t\t});\n\t}\n\treturn temp;\n}\n\ninterface InterfaceProps {\n\tmoonbeamLib: MoonbeamLib;\n\t// gtag: (name: string) => void;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\taddNewContract: (contract: InterfaceContract) => void; // for SmartContracts\n\tsetSelected: (select: InterfaceContract) => void; // for At Address\n\tupdateBalance: (address: string) => void;\n}\n\nconst Compiler: React.FunctionComponent<InterfaceProps> = (props) => {\n\tconst [client, setClient] = React.useState<Client<Api, Readonly<IRemixApi>> | undefined | null>(null);\n\tconst [fileName, setFileName] = React.useState<string>('');\n\tconst [iconSpin, setIconSpin] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<{ fileName: string; data: { [key: string]: any } }>({\n\t\tfileName: '',\n\t\tdata: {},\n\t});\n\tconst [contractName, setContractName] = React.useState<string>('');\n\tconst [constructor, setConstructor] = React.useState<AbiItem | null>(null);\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst [address, setAddress] = React.useState<string>('');\n\tconst [error, setError] = React.useState<string>('');\n\n\tconst {\n\t\tmoonbeamLib,\n\t\t// gtag,\n\t\tbusy,\n\t\tsetBusy,\n\t\taddNewContract,\n\t\tsetSelected,\n\t\tupdateBalance,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tasync function init() {\n\t\t\tconst temp = createClient();\n\t\t\tawait temp.onload();\n\t\t\ttemp.solidity.on('compilationFinished', (fn: string, source: any, languageVersion: string, data: any) => {\n\t\t\t\t// console.log(fn, source, languageVersion, data);\n\t\t\t\tsetContracts({ fileName: fn, data: data.contracts[fn] });\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tselect(\n\t\t\t\t\tObject.keys(data.contracts[fn]).length > 0 ? Object.keys(data.contracts[fn])[0] : '',\n\t\t\t\t\tdata.contracts[fn]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttemp.on('fileManager', 'currentFileChanged', (fn: string) => {\n\t\t\t\tsetFileName(fn);\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tsetFileName(await temp.fileManager.getCurrentFile());\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Error from IDE : No such file or directory No file selected');\n\t\t\t}\n\t\t\tsetClient(temp);\n\t\t}\n\t\tinit();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tasync function compile() {\n\t\tsetBusy(true);\n\t\tsetIconSpin('fa-spin');\n\t\tawait client?.solidity.compile(fileName);\n\t\tsetIconSpin('');\n\t\tsetBusy(false);\n\t}\n\n\tfunction select(name: string, newContracts: { [key: string]: any } | null = null) {\n\t\tconst abi = newContracts ? newContracts[name].abi : contracts.data[name].abi;\n\t\tsetContractName(name);\n\t\tsetConstructor(null);\n\t\tsetArgs({});\n\t\tabi.forEach((element0: AbiItem) => {\n\t\t\tif (element0.type === 'constructor') {\n\t\t\t\tconst temp: { [key: string]: string } = {};\n\t\t\t\telement0.inputs?.forEach((element1: AbiInput) => {\n\t\t\t\t\ttemp[element1.name] = '';\n\t\t\t\t});\n\t\t\t\tsetArgs(temp);\n\t\t\t\tsetConstructor(element0);\n\t\t\t}\n\t\t});\n\t\tsetSelected({ name, address: '', abi: getFunctions(abi) });\n\t}\n\n\tasync function onDeploy() {\n\t\tif (!busy && moonbeamLib.isConnected && moonbeamLib.isMoonbeamNetwork) {\n\t\t\t// gtag('deploy');\n\t\t\tsetBusy(true);\n\t\t\tsetAddress('');\n\t\t\ttry {\n\t\t\t\tconst newContract = new moonbeamLib.web3.eth.Contract(\n\t\t\t\t\tJSON.parse(JSON.stringify(contracts.data[contractName].abi))\n\t\t\t\t);\n\t\t\t\tconst accounts = await moonbeamLib.getAccounts();\n\t\t\t\tconst parms: string[] = getArguments(constructor, args);\n\t\t\t\tconst rawTx = {\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tdata: newContract\n\t\t\t\t\t\t.deploy({ data: `0x${contracts.data[contractName].evm.bytecode.object}`, arguments: parms })\n\t\t\t\t\t\t.encodeABI(),\n\t\t\t\t};\n\t\t\t\t// console.log(rawTx)\n\t\t\t\tconst txReceipt = await moonbeamLib.sendTransaction(rawTx);\n\t\t\t\t// console.log(txReceipt)\n\t\t\t\tif (txReceipt.contractAddress) {\n\t\t\t\t\tsetAddress(txReceipt.contractAddress);\n\t\t\t\t\taddNewContract({\n\t\t\t\t\t\tname: contractName,\n\t\t\t\t\t\taddress: txReceipt.contractAddress,\n\t\t\t\t\t\tabi: getFunctions(contracts.data[contractName].abi),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconsole.error(e);\n\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t}\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tfunction Contracts() {\n\t\tconst { data } = contracts;\n\t\tconst value = contracts.fileName.split('/')[contracts.fileName.split('/').length - 1];\n\t\tconst items = Object.keys(data).map((key) => <option key={key} value={key}>{`${key} - ${value}`}</option>);\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t<small>CONTRACT</small>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\t\tdisabled={!contracts.data[contractName]}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (contracts.data[contractName]) {\n\t\t\t\t\t\t\t\t\tcopy(JSON.stringify(contracts.data[contractName].abi, null, 4));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Text>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tvalue={contractName}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tselect(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{items}\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"Compiler\">\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait compile();\n\t\t\t\t}}\n\t\t\t\tblock\n\t\t\t\tdisabled={fileName === '' || iconSpin !== ''}\n\t\t\t>\n\t\t\t\t<i className={`fas fa-sync ${iconSpin}`} style={{ marginRight: '0.3em' }} />\n\t\t\t\t<span>\n\t\t\t\t\tCompile&nbsp;\n\t\t\t\t\t{`${fileName === '' ? '<no file selected>' : fileName.split('/')[fileName.split('/').length - 1]}`}\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t\t<hr />\n\t\t\t<Contracts />\n\t\t\t<Card>\n\t\t\t\t<Card.Header className=\"p-2\">Deploy</Card.Header>\n\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t<Method\n\t\t\t\t\t\tabi={constructor}\n\t\t\t\t\t\tsetArgs={(name: string, value: string) => {\n\t\t\t\t\t\t\targs[name] = value;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t\t\t<small>{error}</small>\n\t\t\t\t\t</Alert>\n\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control value={address} placeholder=\"contract address\" size=\"sm\" readOnly />\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tbusy || !(moonbeamLib && moonbeamLib.isConnected && moonbeamLib.isMoonbeamNetwork) || fileName === ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={onDeploy}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>Deploy</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Compiler;\n","import React from 'react';\nimport { Alert, Accordion, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { CSSTransition } from 'react-transition-group';\nimport { AbiInput, AbiItem } from 'web3-utils';\n// import { MoonbeamLib } from '@dexfair/moonbeamLib-web-signer';\nimport { MoonbeamLib } from '../moonbeam-signer';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\nimport './animation.css';\n\nconst EMPTYLIST = 'Currently you have no contract instances to interact with.';\n\ninterface InterfaceDrawMethodProps {\n\tmoonbeamLib: MoonbeamLib;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tabi: AbiItem;\n\taddress: string;\n\tupdateBalance: (address: string) => void;\n}\n\nconst DrawMethod: React.FunctionComponent<InterfaceDrawMethodProps> = (props) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [success, setSuccess] = React.useState<string>('');\n\tconst [value, setValue] = React.useState<string>('');\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst { moonbeamLib, busy, /* setBusy, */ abi, address, updateBalance } = props;\n\n\tReact.useEffect(() => {\n\t\tconst temp: { [key: string]: string } = {};\n\t\tabi.inputs?.forEach((element: AbiInput) => {\n\t\t\ttemp[element.name] = '';\n\t\t});\n\t\tsetArgs(temp);\n\t}, [abi.inputs]);\n\n\tfunction buttonVariant(stateMutability: string | undefined): string {\n\t\tswitch (stateMutability) {\n\t\t\tcase 'view':\n\t\t\tcase 'pure':\n\t\t\t\treturn 'primary';\n\t\t\tcase 'nonpayable':\n\t\t\t\treturn 'warning';\n\t\t\tcase 'payable':\n\t\t\t\treturn 'danger';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn '';\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Method\n\t\t\t\tabi={abi}\n\t\t\t\tsetArgs={(name: string, value2: string) => {\n\t\t\t\t\targs[name] = value2;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t<Alert variant=\"success\" onClose={() => setSuccess('')} dismissible hidden={success === ''}>\n\t\t\t\t<small>{success}</small>\n\t\t\t</Alert>\n\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || !(moonbeamLib && moonbeamLib.isConnected && moonbeamLib.isMoonbeamNetwork)}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t// setBusy(true)\n\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst newContract = new moonbeamLib.web3.eth.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\tconst accounts = await moonbeamLib.getAccounts();\n\t\t\t\t\t\t\tif (abi.stateMutability === 'view' || abi.stateMutability === 'pure') {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await newContract.methods[abi.name](...parms).call({ from: accounts[0] })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\tif (typeof txReceipt === 'object') {\n\t\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 4));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetValue(txReceipt);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await newContract.methods[abi.name](...parms).send({ from: accounts[0] })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\t// console.log(txReceipt)\n\t\t\t\t\t\t\t\t\tsetError('');\n\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 2));\n\t\t\t\t\t\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// setBusy(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<small>{abi.stateMutability === 'view' || abi.stateMutability === 'pure' ? 'call' : 'transact'}</small>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (abi.name) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\t\t\tif (args[item.name]) {\n\t\t\t\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconst newContract = new moonbeamLib.web3.eth.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\t\t\tcopy(newContract.methods[abi.name](...parms).encodeABI());\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.log(e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<Form.Control\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\treadOnly\n\t\t\t\t\thidden={!(abi.stateMutability === 'view' || abi.stateMutability === 'pure')}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t</>\n\t);\n};\n\nconst ContractCard: React.FunctionComponent<{\n\tmoonbeamLib: MoonbeamLib;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\t// blockscout: string;\n\tcontract: InterfaceContract;\n\tindex: number;\n\tremove: () => void;\n\tupdateBalance: (address: string) => void;\n}> = (props) => {\n\tconst [enable, setEnable] = React.useState<boolean>(true);\n\tconst {\n\t\tmoonbeamLib,\n\t\tbusy,\n\t\tsetBusy,\n\t\t// blockscout,\n\t\tcontract,\n\t\tindex,\n\t\tremove,\n\t\tupdateBalance,\n\t} = props;\n\n\tfunction DrawMathods() {\n\t\tconst list = contract.abi ? contract.abi : [];\n\t\tconst items = list.map((abi: AbiItem, id: number) => (\n\t\t\t<Accordion key={`Methods_A_${index.toString()}`}>\n\t\t\t\t<Card>\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey={`Methods_${id}`} className=\"p-1\">\n\t\t\t\t\t\t<small>{abi.name}</small>\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t<Accordion.Collapse eventKey={`Methods_${id}`}>\n\t\t\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t\t\t<DrawMethod\n\t\t\t\t\t\t\t\tmoonbeamLib={moonbeamLib}\n\t\t\t\t\t\t\t\tbusy={busy}\n\t\t\t\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\t\t\t\tabi={abi}\n\t\t\t\t\t\t\t\taddress={contract.address}\n\t\t\t\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<CSSTransition in={enable} timeout={300} classNames=\"zoom\" unmountOnExit onExited={remove}>\n\t\t\t<Card className=\"mb-2\">\n\t\t\t\t<Card.Header className=\"px-2 py-1\">\n\t\t\t\t\t<strong className=\"align-middle\">{contract.name}</strong>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<small className=\"align-middle\">{`${contract.address.substring(0, 6)}...${contract.address.substring(\n\t\t\t\t\t\t38\n\t\t\t\t\t)}`}</small>\n\t\t\t\t\t{/* <Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\twindow.open(`${blockscout}/address/${contract.address}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-external-link-alt\" />\n\t\t\t\t\t</Button> */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetEnable(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-trash-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Header>\n\t\t\t\t{DrawMathods()}\n\t\t\t</Card>\n\t\t</CSSTransition>\n\t);\n};\n\ninterface InterfaceSmartContractsProps {\n\tmoonbeamLib: MoonbeamLib;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\t// blockscout: string;\n\tcontracts: InterfaceContract[];\n\tupdateBalance: (address: string) => void;\n}\n\nconst SmartContracts: React.FunctionComponent<InterfaceSmartContractsProps> = (props) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [count, setCount] = React.useState<number>(0);\n\tconst {\n\t\tmoonbeamLib,\n\t\tbusy,\n\t\tsetBusy,\n\t\t// blockscout,\n\t\tcontracts,\n\t\tupdateBalance,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tsetCount(0);\n\t\tsetError(EMPTYLIST);\n\t}, [contracts, busy]);\n\n\tfunction DrawContracts() {\n\t\tconst items = contracts.map((data: InterfaceContract, index: number) => (\n\t\t\t<ContractCard\n\t\t\t\tmoonbeamLib={moonbeamLib}\n\t\t\t\tbusy={busy}\n\t\t\t\tsetBusy={setBusy}\n\t\t\t\t// blockscout={blockscout}\n\t\t\t\tcontract={data}\n\t\t\t\tindex={index}\n\t\t\t\tremove={() => {\n\t\t\t\t\tsetCount(count + 1);\n\t\t\t\t\tsetError(EMPTYLIST);\n\t\t\t\t}}\n\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\tkey={`Contract_${index.toString()}`}\n\t\t\t/>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<div className=\"SmartContracts\">\n\t\t\t<Alert variant=\"warning\" className=\"text-center\" hidden={contracts.length !== count}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t{DrawContracts()}\n\t\t</div>\n\t);\n};\n\nexport default SmartContracts;\n","import React from 'react';\nimport { Container, Form, InputGroup, Tooltip, Button, OverlayTrigger } from 'react-bootstrap';\nimport { NETWORKS, MoonbeamLib, NETWORKS_BY_IDS } from './moonbeam-signer';\nimport Compiler from './components/Compiler';\nimport SmartContracts from './components/SmartContracts';\nimport { InterfaceContract } from './components/Types';\n\nconst App: React.FunctionComponent = () => {\n\tconst [account, setAccount] = React.useState<string>('');\n\tconst [balance, setBalance] = React.useState<string>('');\n\tconst [network, setNetwork] = React.useState<string>('Moonbase Alpha');\n\t// const [blockscout, setBlockscout] = React.useState<string>('');\n\tconst [busy, setBusy] = React.useState<boolean>(false);\n\tconst [moonbeamLib] = React.useState<MoonbeamLib>(new MoonbeamLib(NETWORKS['Moonbase Alpha']));\n\tconst [atAddress, setAtAddress] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<InterfaceContract[]>([]);\n\tconst [selected, setSelected] = React.useState<InterfaceContract | null>(null);\n\n\tasync function connect() {\n\t\t// if (!moonbeamLib.isConnected) {\n\t\tsetBusy(true);\n\t\t// setBlockscout(NETWORKS[network].blockscout || '');\n\t\tconst { networkId } = await moonbeamLib.connectMetaMask((type: string, accounts: string[]) => {\n\t\t\tsetAccount(accounts[0]);\n\t\t\tupdateBalance(accounts[0]);\n\t\t});\n\t\tif (NETWORKS_BY_IDS[networkId]) {\n\t\t\tsetNetwork(NETWORKS_BY_IDS[networkId].name);\n\t\t} else {\n\t\t\tsetNetwork('Not Moonbeam');\n\t\t}\n\t\t// For analytics\n\t\t// if (result && (window as { [key: string]: any }).gtag) {\n\t\t// \tconst { gtag } = window as { [key: string]: any };\n\t\t// \tgtag('event', 'login', {\n\t\t// \t\tmethod: 'MetaMask',\n\t\t// \t});\n\t\t// }\n\t\tsetBusy(false);\n\t\t// }\n\t}\n\n\tasync function updateBalance(address: string) {\n\t\tif (address && address !== '') {\n\t\t\tconst readBalance = await moonbeamLib.getTotalBalance(address);\n\t\t\tsetBalance(moonbeamLib.web3.utils.fromWei(readBalance.toString()));\n\t\t}\n\t}\n\n\t// async function changeNetwork(e: React.ChangeEvent<HTMLInputElement>) {\n\t// \tsetBusy(true);\n\t// \tsetContracts([]);\n\t// \tconst temp = e.target.value;\n\t// \tif (NETWORKS[temp]) {\n\t// \t\tsetNetwork(temp);\n\t// \t\tsetBlockscout(NETWORKS[temp].blockscout || '');\n\t// \t\tawait moonbeamLib.changeNetwork(NETWORKS[temp]);\n\t// \t\tawait updateBalance(account);\n\t// \t} else {\n\t// \t\tsetNetwork('Not Moonbeam');\n\t// \t}\n\t// \tsetBusy(false);\n\t// }\n\n\tfunction addNewContract(contract: InterfaceContract) {\n\t\tsetContracts(contracts.concat([contract]));\n\t}\n\n\tfunction Networks() {\n\t\t// const list = NETWORKS;\n\t\t// const items = Object.keys(list).map((key) => (\n\t\t// \t<option key={key} value={key}>\n\t\t// \t\t{key}\n\t\t// \t</option>\n\t\t// ));\n\t\treturn (\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>NETWORK</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"0.0\" value={network} size=\"sm\" readOnly />\n\t\t\t\t</InputGroup>\n\t\t\t\t{/* <Form.Control as=\"select\" value={network} onChange={changeNetwork} disabled={!moonbeamLib.isConnected}>\n\t\t\t\t\t{items}\n\t\t\t\t</Form.Control> */}\n\t\t\t</Form.Group>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>ACCOUNT</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Account\" value={account} size=\"sm\" readOnly />\n\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t<Tooltip id=\"overlay-connect\" hidden={account !== ''}>\n\t\t\t\t\t\t\t\t\t\t\tConnect to Wallet\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button variant=\"warning\" block size=\"sm\" disabled={busy} onClick={connect}>\n\t\t\t\t\t\t\t\t\t\t<small>Connect</small>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t{moonbeamLib.isConnected ? (\n\t\t\t\t\t\t\tnetwork === 'Not Moonbeam' ? (\n\t\t\t\t\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t\t\t\t\t<small style={{ color: 'red' }}>\n\t\t\t\t\t\t\t\t\t\tConnect MetaMask to a Moonbeam Network{' '}\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://docs.moonbeam.network/getting-started/testnet/connect/\">(instructions)</a>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t\t\t\t\t<small style={{ color: 'green' }}>Connected to {network}</small>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t\t\t\t<small style={{ color: 'red' }}>Please Connect</small>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>BALANCE (MOONBEAM)</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"0.0\" value={balance} size=\"sm\" readOnly />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Networks />\n\t\t\t\t</Form>\n\t\t\t\t<hr />\n\t\t\t\t<Compiler\n\t\t\t\t\tmoonbeamLib={moonbeamLib}\n\t\t\t\t\t// Analytics\n\t\t\t\t\t// gtag={(name: string) => {\n\t\t\t\t\t// \tconst { gtag } = window as { [key: string]: any };\n\t\t\t\t\t// \tgtag('event', name, { network });\n\t\t\t\t\t// }}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\taddNewContract={addNewContract}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t/>\n\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t<small>OR</small>\n\t\t\t\t</p>\n\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tvalue={atAddress}\n\t\t\t\t\t\tplaceholder=\"contract address\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetAtAddress(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t/>\n\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\toverlay={<Tooltip id=\"overlay-ataddresss\">Use deployed Contract address</Tooltip>}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetBusy(true);\n\t\t\t\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\t\t\t\taddNewContract({ ...selected, address: atAddress });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetBusy(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>At Address</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t</InputGroup>\n\t\t\t\t<hr />\n\t\t\t\t<SmartContracts\n\t\t\t\t\tmoonbeamLib={moonbeamLib}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\t// blockscout={blockscout}\n\t\t\t\t\tcontracts={contracts}\n\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}